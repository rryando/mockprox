name: CI

on: [push, pull_request]

jobs:
  lint:
    name: Lint and format
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Update NPM
        run: |
          npm install -g npm@latest
      - uses: actions/cache@v4
        id: cache-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: |
          npm run bootstrap
      - name: Link packages
        run: |
          npm run link
      - name: Lint and check format
        run: |
          npm run lint
          npm run format

  test-libs:
    name: Libs - Build and test
    runs-on: ubuntu-latest
    timeout-minutes: 10

    needs: lint

    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Update NPM
        run: |
          npm install -g npm@latest
      - uses: actions/cache@v4
        id: cache-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: |
          npm run bootstrap
      - name: Link packages
        run: |
          npm run link
      - name: Build and test
        run: |
          npm run build:libs
          npm run test:libs

  test-cli:
    name: CLI - Build and test
    runs-on: ubuntu-latest
    timeout-minutes: 15

    needs: [lint, test-libs]

    strategy:
      matrix:
        node: [18, 20, 22]

    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Update NPM
        run: |
          npm install -g npm@latest
      - uses: actions/cache@v4
        id: cache-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: |
          npm run bootstrap
      - name: Link packages
        run: |
          npm run link
      - name: Build and test
        run: |
          npm run build:libs
          npm run build:cli
          npm run test:cli
